<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   height="182"
   width="160"
   version="1.1"
   id="svg6"
   xml:space="preserve"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs6"><linearGradient
       id="linearGradient134"><stop
         style="stop-color:#f89200;stop-opacity:1;"
         offset="0.18344519"
         id="stop134" /><stop
         style="stop-color:#f89200;stop-opacity:0;"
         offset="1"
         id="stop135" /></linearGradient><linearGradient
       id="swatch116"><stop
         style="stop-color:#ffea57;stop-opacity:1;"
         offset="0"
         id="stop117" /></linearGradient><linearGradient
       id="linearGradient99"><stop
         style="stop-color:#ff6e6e;stop-opacity:1;"
         offset="0"
         id="stop100" /><stop
         style="stop-color:#f80000;stop-opacity:1;"
         offset="1"
         id="stop99" /></linearGradient><radialGradient
       xlink:href="#linearGradient15"
       id="radialGradient16"
       cx="96.805046"
       cy="103.95468"
       fx="96.805046"
       fy="103.95468"
       r="7.0256734"
       gradientTransform="matrix(1,0,0,0.79456788,0,21.35563)"
       gradientUnits="userSpaceOnUse" /><linearGradient
       id="linearGradient15"><stop
         style="stop-color:#ffed51;stop-opacity:0.91489366;"
         offset="0.34228188"
         id="stop15" /><stop
         style="stop-color:#f0ad00;stop-opacity:1;"
         offset="1"
         id="stop16" /></linearGradient><radialGradient
       xlink:href="#linearGradient16"
       id="radialGradient23"
       cx="72.87793"
       cy="104.60528"
       fx="72.87793"
       fy="104.60528"
       r="7.6406169"
       gradientTransform="matrix(1,0,0,0.78462207,0,22.529668)"
       gradientUnits="userSpaceOnUse" /><linearGradient
       id="linearGradient16"><stop
         style="stop-color:#ffed51;stop-opacity:0.91372549;"
         offset="0.48993289"
         id="stop17" /><stop
         style="stop-color:#f0ad00;stop-opacity:1;"
         offset="1"
         id="stop18" /></linearGradient><radialGradient
       xlink:href="#linearGradient19"
       id="radialGradient22"
       cx="85.016418"
       cy="107.1543"
       fx="85.016418"
       fy="107.1543"
       r="6.7620392"
       gradientTransform="matrix(1,0,0,1.0792455,0,-8.4915005)"
       gradientUnits="userSpaceOnUse" /><linearGradient
       id="linearGradient19"><stop
         style="stop-color:#ffed51;stop-opacity:0.91372549;"
         offset="0.36017898"
         id="stop19" /><stop
         style="stop-color:#f0ad00;stop-opacity:1;"
         offset="1"
         id="stop20" /></linearGradient><radialGradient
       xlink:href="#linearGradient99"
       id="radialGradient106"
       cx="84.561989"
       cy="108.12315"
       fx="84.561989"
       fy="108.12315"
       r="6.0046544"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(0.82179715,-0.49307829)" /><linearGradient
       xlink:href="#linearGradient134"
       id="linearGradient135"
       x1="14.818009"
       y1="52.212727"
       x2="14.818009"
       y2="78.069496"
       gradientUnits="userSpaceOnUse" /><meshgradient
       id="meshgradient155"
       gradientUnits="userSpaceOnUse"
       x="111.68815"
       y="63.979973"><meshrow
         id="meshrow155"><meshpatch
           id="meshpatch155"><stop
             path="c 6.29454,0  12.5891,0  18.8836,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop155" /><stop
             path="c 0,3.43747  0,6.87494  0,10.3124"
             style="stop-color:#f89200;stop-opacity:1"
             id="stop156" /><stop
             path="c -6.29454,0  -12.5891,0  -18.8836,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop157" /><stop
             path="c 0,-3.43747  0,-6.87494  0,-10.3124"
             style="stop-color:#f89200;stop-opacity:1"
             id="stop158" /></meshpatch></meshrow></meshgradient><linearGradient
       xlink:href="#linearGradient30"
       id="linearGradient31"
       x1="83.773346"
       y1="47.414211"
       x2="80.648407"
       y2="83.132439"
       gradientUnits="userSpaceOnUse" /><linearGradient
       id="linearGradient30"><stop
         style="stop-color:#f89200;stop-opacity:1;"
         offset="0"
         id="stop30" /><stop
         style="stop-color:#f89200;stop-opacity:1;"
         offset="0.46085012"
         id="stop32" /><stop
         style="stop-color:#f5b000;stop-opacity:1;"
         offset="0.6152125"
         id="stop31" /></linearGradient><linearGradient
       xlink:href="#linearGradient32"
       id="linearGradient34"
       x1="104.25771"
       y1="46.429131"
       x2="78.232071"
       y2="46.429131"
       gradientUnits="userSpaceOnUse" /><linearGradient
       id="linearGradient32"><stop
         style="stop-color:#3ace00;stop-opacity:1;"
         offset="0"
         id="stop33" /><stop
         style="stop-color:#2fa700;stop-opacity:1;"
         offset="1"
         id="stop34" /></linearGradient></defs><path
     d="m 56.314,85.468 -0.156,-0.694 -3.337,-6.156 -1.438,-4.56 1.373,-6.521 4.135,-5.647 1.446,-2.354 7.328,-15.628 1.194,-1.257 8.576,17.368 11.82,-0.174 8.065,-16.617 1.081,-1.019 8.528,18.03 2.818,1.393 1.984,1.65 2.254,4.107 0.969,3.684 -0.133,6.316 -3.977,6.408 -2.836,0.965 1.036,2.685 2.262,2.309 3.044,5.208 -0.442,6.091 -4.635,5.865 -0.26,0.665 -1.367,1.082 1.967,2.98 1.899,4.814 -0.379,3.005 -3.291,3.741 -1.677,0.217 H 64.376 l -11.29,-0.385 -2.072,-1.571 1.146,-3.266 3.84,-3.07 -0.994,-8.062 0.707,-1.41 -2.585,-4.703 -0.252,-7.841 4.457,-5.784 -1.425,-2.584 50.1,0.014"
     fill="#ffffff"
     id="path1" /><circle
     cx="68.002998"
     cy="72.366997"
     r="2.118"
     id="circle2" /><circle
     cx="101.377"
     cy="72.416"
     r="2.118"
     id="circle3" /><path
     d="m 58.897,69.246 h -1.749 l 2.64,-4.23 h 2.84 z m 22.953,1.969 -1.138,2.637 -0.48,2.744 -0.032,2.498 0.655,1.998 1.138,0.857 1.58,0.063 c 0,0 0.89,-0.906 0.968,-1.061 0.078,-0.156 0.594,-1.155 0.594,-1.155 0,0 0.078,-2.2 0.078,-2.385 l 0.013,-3.183 H 87.5 l -0.03,2.722 -0.042,2.619 0.19,0.95 0.59,0.871 0.738,0.517 1.076,0.125 1.295,-0.485 0.827,-1.17 0.453,-1.946 c 0,0 -0.077,-1.516 -0.077,-1.685 0,-0.17 -0.281,-1.824 -0.281,-1.824 0,0 -0.732,-2.06 -0.793,-2.212 a 82.04,82.04 0 0 0 -0.785,-1.598 l 2.171,0.003 c 0,0 0.658,1.39 0.765,1.557 0.106,0.168 0.59,1.684 0.59,1.684 l 0.264,1.589 0.14,1.95 -0.139,1.834 -0.514,1.48 -0.81,1.276 -1.092,0.897 -0.99,0.4 -1.389,0.107 -1.214,-0.25 -0.934,-0.672 -0.795,-1.107 -0.466,-0.779 -0.966,1.588 -0.966,0.796 -1.636,0.422 -1.871,-0.201 -1.621,-1.42 c 0,0 -0.907,-1.294 -1,-1.98 -0.092,-0.687 -0.249,-2.203 -0.249,-2.203 l 0.078,-2.118 c 0,0 0.315,-1.797 0.406,-1.934 0.091,-0.137 0.802,-1.8 0.802,-1.8 l 0.669,-1.089 z m 27.976,-0.994 h -1.689 l -3.633,-4.078 h 2.877 z M 103.72,61.003 106.118,59.891 95.952,38 86.207,58.99 76.405,58.995 66.7,38.043 l -9.979,21.65 2.37,1.171 7.594,-17.034 7.868,17.26 13.612,-0.212 7.78,-17.199 z"
     id="path3" /><path
     d="m 107.753,61.093 3.161,3.641 1.79,3.046 0.873,2.638 0.172,1.791 0.048,2.78 -0.413,2.408 c 0,0 -0.592,1.647 -0.97,2.434 -0.293,0.61 -0.628,1.2 -1.003,1.762 -0.675,1.017 -1.45,1.967 -2.233,2.902 -0.462,0.551 -1.452,1.594 -1.452,1.594 l -1.718,-1.327 2.2,-2.23 1.56,-2.061 1.155,-2.31 0.593,-2.09 0.214,-2.248 -0.186,-2.747 -0.778,-2.7 -1.03,-1.794 -1.372,-1.681 -2.367,-2.512 z M 56.714,86.3 58.507,85.11 56,82.369 l -1.874,-2.97 -0.74,-2.088 -0.338,-1.7 -0.068,-2.187 0.133,-2.571 0.51,-2.214 1.17,-2.263 1.29,-1.6 1.38,-1.688 1.137,-1.125 -1.636,-1.324 -1.402,1.532 -1.622,1.888 -1.104,1.81 -1.24,2.65 -0.716,2.396 -0.119,1.844 -0.019,2.021 0.132,1.423 0.72,2.529 0.86,1.942 1.358,2.063 c 0,0 1.015,1.379 1.558,2.04 0.438326,0.51645 0.886407,1.024541 1.344,1.524 z m 50.851,0.059 -2.1,1.64 2.074,1.629 1.7,1.842 0.951,1.513 0.608,1.565 0.397,2.362 -0.077,2.044 -0.365,1.71 -0.862,1.848 -0.837,1.125 -1.346,1.4 -1.437,1.235 -0.78,0.624 2.076,1.584 1.62,-1.664 1.556,-1.599 1.136,-1.445 0.684,-1.268 0.75,-2.113 0.33,-2.199 -0.044,-2.22 -0.562,-2.548 -0.806,-1.763 -0.94,-1.42 -1.678,-1.887 z m -48.324,1.677 -2.087,-1.59 -1.811,1.72 -1.569,1.652 -1.17,1.534 -0.949,1.925 -0.43,1.997 -0.199,1.602 0.067,1.783 0.287,2.089 0.721,1.902 1.245,1.896 1.165,1.416 2.291,2.066 0.472,0.394 1.888,-1.542 -1.692,-1.424 -1.856,-1.886 -1.116,-1.645 -0.65,-1.832 -0.243,-1.7 -0.057,-1.837 0.206,-1.853 0.574,-1.58 0.995,-1.547 1.564,-1.746 z m 44.827,20.688 1.652,-1.398 2.334,2.257 1.101,1.312 0.627,1.082 0.452,1.356 0.398,1.867 0.04,1.45 -0.2,2.146 -0.47,1.404 -0.96,1.717 -1.263,1.513 -1.63,1.46 -0.557,0.478 -1.427,-1.324 1.773,-1.514 1.38,-1.605 0.86,-1.6 0.475,-1.414 0.055,-1.418 -0.086,-2.107 -0.507,-1.451 -1.335,-2.015 -1.294,-1.178 z m -20.824,0.045 1.653,-1.398 2.334,2.257 1.1,1.312 0.627,1.082 0.453,1.356 0.398,1.867 0.039,1.449 -0.2,2.146 -0.468,1.405 -0.96,1.717 -1.264,1.513 -1.63,1.46 -0.557,0.477 -1.427,-1.323 1.773,-1.515 1.38,-1.605 0.86,-1.6 0.475,-1.413 0.054,-1.419 -0.085,-2.106 -0.507,-1.451 -1.335,-2.015 -1.294,-1.178 z"
     id="path4" /><path
     d="m 53.28,104.694 0.768,5.769 0.81,3.489 -2.33,1.535 -1.68,1.983 -0.793,1.874 -0.08,1.993 0.269,1.127 1.05,1.427 2.062,1.062 3.248,0.228 8.395,-0.054 0.386,-2.573 -6.117,0.46 -2.517,0.053 -2.827,-0.455 -1.05,-0.807 -0.535,-1.198 0.105,-1.577 0.646,-1.184 1.223,-1.374 1.453,-0.902 3.624,-1.608 4.084,-1.45 1.374,-0.39 1.262,-0.402 -1.955,-2.384 -0.633,0.744 -3.287,1.31 -3.299,1.588 -0.78,-3.044 -0.282,-2.678 0.083,-2.582 z"
     id="path5" /><g
     id="layer16"><g
       id="g1"
       style="display:inline;opacity:1"
       transform="translate(-0.12840517,-6.256625)"><path
         style="fill:#f89200;fill-opacity:1;stroke:#000000;stroke-width:1.08124;stroke-opacity:1"
         d="m 82.71441,131.66358 c -5.544606,-0.97345 -11.928976,-3.96753 -11.672277,-6.23653 0.466749,1.4689 1.040476,2.76154 0.03121,3.20613 -1.235198,0.54412 -4.241813,0.0653 -5.292938,0.14602 -5.89452,-1.58391 -7.976834,-11.42841 -7.976834,-11.42841 0,0 -0.724593,1.6489 1.434458,6.22277 -11.383732,-6.53448 -7.885682,-30.2403 -2.132502,-32.019858 0.424728,-0.131376 3.755558,2.980897 6.005167,3.60645 11.810731,3.284231 24.820692,2.768037 36.776519,0.05921 2.799497,-0.634281 7.311217,-4.261679 7.764437,-3.724121 13.92313,16.514239 -3.01043,31.697029 -3.01043,31.697029 0,0 0.43543,-0.87276 1.55092,-7.11573 -1.48446,-2.11683 6.6275,10.78626 -23.47772,15.58704 z"
         id="path4-2" /><path
         style="display:none;fill:url(#radialGradient16);stroke:#000000;stroke-width:1.08124;stroke-opacity:1"
         d="m 98.935708,99.292604 c -9.826148,-2.296851 -8.558254,6.580166 -8.558254,6.580166 l 4.69119,0.93116 c 1.775045,-5.58693 2.916145,1.11739 2.916145,1.11739 0,0 -0.06339,0.0621 4.691201,0.99322 0,0 2.85276,-8.75285 -3.740282,-9.621936 z"
         id="path5-3" /><path
         style="display:none;fill:url(#radialGradient23);stroke:#000000;stroke-width:1.08124;stroke-opacity:1"
         d="m 79.473603,107.4247 c -4.310827,0.55869 -4.247433,0.55869 -4.247433,0.55869 0,0 -2.408998,-7.51133 -4.120643,0.86908 -4.501011,1.11739 -4.501011,1.11739 -4.501011,1.11739 0,0 -3.993857,-8.25625 5.57871,-10.801411 0,0 10.143136,-0.744925 7.290377,8.256251 z"
         id="path6-3" /><path
         style="display:none;fill:url(#radialGradient22);stroke:#000000;stroke-width:1.08124;stroke-opacity:1"
         d="m 85.242497,101.09284 5.705508,11.54633 -11.791376,1.17946 z"
         id="path7" /><path
         style="fill:#9b5a00;fill-opacity:1;stroke:#000000;stroke-width:1.08124;stroke-opacity:1"
         d="m 102.67599,114.31525 -6.846613,0.49662 -0.06339,2.54516 -3.613488,0.55869 -0.06338,-2.29686 -15.087889,0.68286 0.126789,2.35893 -4.501011,-0.0622 0.190184,-2.85555 -8.811831,-2.60722 c 0,0 1.901833,9.49778 5.451924,9.74609 0,0 8.685039,3.04178 11.284209,1.55192 l 0.316973,-2.85554 5.325141,0.2483 0.190186,1.98647 c 0,0 16.989736,0.68285 16.102206,-9.49778 z"
         id="path8" /><path
         style="opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:1.00157;stroke-opacity:1"
         d="m 59.441615,101.72891 c -1.147237,1.73915 0.172186,4.45121 1.480795,6.07242 1.62998,2.01935 4.539674,3.53572 7.00426,3.3988 l 3.698087,-0.20545 3.698088,-1.02725 1.397055,-0.8218 1.355965,-1.64359 0.664487,-1.54938 0.425427,-1.51783 -0.185937,-1.65813 -0.374794,-1.35596 -0.606805,-0.8604 -0.928047,-1.051316 -1.529867,-0.807269 -1.49127,-0.280579 -4.2528,1.579894 c 0,0 -8.427799,-1.193147 -10.354644,1.72784 z"
         id="path9" /><path
         style="opacity:1;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:1.00157;stroke-opacity:1"
         d="m 104.71237,110.50159 c -3.01338,-0.0138 -6.959448,-0.11273 -6.959448,-0.11273 l -2.560639,-0.31139 -1.655629,-0.74241 -0.852615,-1.0591 -0.192683,-0.87669 0.05313,-1.58973 0.647166,-1.52634 1.341437,-1.57346 1.827769,-1.33012 4.565242,-2.057292 2.54331,-1.116904 c 0,0 -0.51819,0.837235 0.56499,-0.616348 1.08318,-1.453583 4.31996,2.461544 4.69306,4.626274 0.52131,3.02465 0.38927,8.30643 -4.01509,8.28624 z"
         id="path10" /></g><path
       d="m 61.433412,93.927229 0.914,2.213 4.42,-1.36 2.324,-0.592 2.108,-0.32 1.512,-0.066 1.126,0.078 0.86,0.22 0.814,0.31 0.826,0.74 0.338,0.76 0.308,1.035 0.076,1.045 -0.179,1.08 -0.585,1.135001 -0.87,0.881 -1.07,0.816 -0.982,0.43 -1.19,0.297 -1.225,0.077 -3.618,0.153 0.432,2.132 3.75,-0.24 2.006,-0.47 1.73,-0.596 1.303,-0.795 1.39,-1.62 0.717,-1.480999 0.43,-1.645002 -0.122,-1.445 -0.409,-1.52 -0.562,-0.894 -1.069,-1.133 -1.553,-0.76 -1.386,-0.232 -2.14,-0.02 -3.026,0.398 -2.502,0.42 z m 34.837,1.174 -1.909,1.257 -1.377,1.625 -0.65,1.535 -0.065,1.634001 0.22,0.923 0.862,1.169 1.688,0.87 2.662,0.188 6.878998,-0.045 0.316,-2.108 -5.011998,0.376 -2.063,0.044 -2.316,-0.373 -0.86,-0.661 -0.438,-0.981 0.085,-1.292001 0.53,-0.971 1.002,-1.125 1.19,-0.74 2.97,-1.317 3.345998,-1.188 1.126,-0.32 1.034,-0.33 -1.602,-1.953 -0.518,0.61 -2.694,1.072 -2.702998,1.302 z"
       id="path1-3"
       style="display:inline;opacity:1;fill:#1a1a1a;fill-opacity:1" /></g><g
     id="layer17"><g
       id="g131"
       transform="matrix(0.55912143,0,0,0.81363409,121.17084,45.940344)"
       style="display:none"><ellipse
         style="opacity:1;fill:#f89200;fill-opacity:1;stroke:#f89200;stroke-width:1.102;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
         id="path121"
         cx="14.847063"
         cy="78.186783"
         rx="8.5130911"
         ry="1.4236909" /><ellipse
         style="opacity:1;fill:url(#linearGradient135);fill-opacity:1;stroke:#f89200;stroke-width:1.102;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
         id="path122"
         cx="14.818008"
         cy="65.141129"
         rx="12.377395"
         ry="2.2081738" /><path
         style="opacity:1;fill:#f89200;fill-opacity:1;stroke:#f89200;stroke-width:1.102;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
         d="M 6.3339719,78.332056 2.3825032,65.141124 c 0,0 10.2273308,5.462324 24.6966798,0.05811 l -3.71903,12.726053 z"
         id="path123" /></g><g
       id="g147"
       transform="translate(-39.340358,27.021073)"
       style="display:none"><path
         style="opacity:1;fill:#f89200;fill-opacity:1;stroke:url(#meshgradient155);stroke-width:1.102;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
         d="m 130.02076,64.530971 -17.78161,9.210408"
         id="path139" /><g
         id="g106"
         transform="translate(45.058138,-37.423148)"
         style="opacity:1"><circle
           style="display:inline;opacity:1;fill:url(#radialGradient106);stroke:#f80000;stroke-width:0.736002;stroke-opacity:1"
           id="path11"
           cx="85.383789"
           cy="107.63007"
           r="5.6366534"
           transform="translate(-0.12840517,-6.256625)" /><path
           style="display:inline;opacity:1;fill:none;fill-rule:evenodd;stroke:#ff7575;stroke-opacity:1"
           id="path106"
           d="m 42.486912,97.218605 c 0.259583,0.11537 -0.02745,0.406832 -0.191753,0.431444 -0.445257,0.0667 -0.713299,-0.433387 -0.671135,-0.81495 0.07542,-0.682526 0.814217,-1.043238 1.438146,-0.910826 0.915642,0.19432 1.380223,1.199225 1.150518,2.061344 -0.306161,1.149068 -1.585587,1.720044 -2.684541,1.390208 -1.382921,-0.415065 -2.0613,-1.972562 -1.629899,-3.307737 0.522484,-1.617077 2.359876,-2.403382 3.930934,-1.869591 1.851437,0.629054 2.745979,2.747401 2.109282,4.554131 -0.735093,2.085942 -3.135067,3.088922 -5.177328,2.348972 -2.320547,-0.84078 -3.432105,-3.52283 -2.588664,-5.800524 0.946213,-2.555228 3.910668,-3.775464 6.423721,-2.828355 2.367122,0.892111 3.757318,3.420641 3.372897,5.899712"
           transform="translate(42.651272,4.355526)" /></g></g><g
       id="g7"
       transform="matrix(0.02555048,0.03669924,-0.03669924,0.02555048,88.246762,83.966305)">
	<path
   style="fill:#e7453f"
   d="m 166.94,328.996 c -10.534,23.833 -29.69,51.568 -45.078,72.03 -1.474,1.96 -3.723,2.992 -6,2.992 -1.569,0 -3.151,-0.49 -4.502,-1.506 -3.311,-2.49 -3.976,-7.191 -1.486,-10.502 13.482,-17.927 36.67,-50.701 46.018,-75.595 l -2.301,-2.301 c -7.32,2.749 -15.83,6.873 -25.406,12.338 -1.173,0.67 -2.451,0.987 -3.711,0.987 -2.605,0 -5.137,-1.358 -6.521,-3.783 -2.054,-3.598 -0.802,-8.179 2.796,-10.231 7.287,-4.159 14.057,-7.608 20.279,-10.36 -49.268,-8.823 -101.696,12.59 -121.584,22.002 4.744,6.517 6.579,12.079 8.251,17.148 2.026,6.143 3.776,11.449 11.254,18.926 7.478,7.479 12.783,9.229 18.927,11.254 6.954,2.294 14.836,4.894 24.836,14.893 9.999,10 12.599,17.882 14.893,24.836 2.025,6.144 3.775,11.449 11.254,18.927 7.477,7.478 12.783,9.228 18.926,11.254 5.069,1.672 10.632,3.507 17.148,8.251 9.409,-19.879 30.821,-72.296 22.007,-121.56 z m -63.707,13.092 c -8.147,5.501 -16.638,11.568 -25.234,18.034 -1.351,1.016 -2.933,1.506 -4.502,1.506 -2.277,0 -4.525,-1.032 -6,-2.992 -2.489,-3.31 -1.824,-8.012 1.486,-10.502 8.799,-6.618 17.499,-12.835 25.857,-18.478 3.433,-2.319 8.094,-1.414 10.412,2.02 2.319,3.432 1.414,8.094 -2.019,10.412 z"
   id="path1-2" />
	<path
   style="fill:#e7453f"
   d="m 442.305,127.785 c -2.026,-6.143 -3.776,-11.449 -11.254,-18.926 -7.478,-7.479 -12.783,-9.229 -18.927,-11.254 -6.954,-2.294 -14.836,-4.894 -24.836,-14.893 -9.999,-10 -12.599,-17.882 -14.893,-24.836 -2.025,-6.144 -3.775,-11.449 -11.254,-18.927 -7.477,-7.478 -12.783,-9.228 -18.926,-11.254 -5.069,-1.672 -10.632,-3.507 -17.148,-8.251 -9.409,19.88 -30.822,72.298 -22.007,121.563 10.534,-23.834 29.69,-51.569 45.079,-72.031 2.489,-3.311 7.192,-3.976 10.502,-1.486 3.311,2.49 3.976,7.191 1.486,10.502 -13.482,17.927 -36.67,50.701 -46.019,75.595 l 2.307,2.307 c 24.894,-9.348 57.663,-32.532 75.587,-46.013 3.311,-2.49 8.013,-1.824 10.502,1.486 2.489,3.31 1.824,8.012 -1.486,10.502 -20.458,15.386 -48.188,34.538 -72.021,45.072 49.259,8.812 101.673,-12.597 121.558,-22.008 -4.743,-6.516 -6.578,-12.079 -8.25,-17.148 z"
   id="path2" />
	<path
   style="fill:#96362f"
   d="m 309.182,169.874 c -0.018,-0.018 -30.605,-30.605 -30.605,-30.605 -11.64,-11.641 -27.115,-18.051 -43.577,-18.051 -16.462,0 -31.938,6.41 -43.577,18.051 l -52.154,52.154 c -24.029,24.028 -24.029,63.126 0,87.154 l 52.154,52.154 c 11.64,11.641 27.115,18.051 43.577,18.051 16.462,0 31.938,-6.41 43.577,-18.051 l 52.154,-52.154 c 24.029,-24.028 24.029,-63.126 0,-87.154 z m -117.759,11.821 -30.941,30.941 c -1.465,1.464 -3.385,2.196 -5.304,2.196 -1.919,0 -3.839,-0.732 -5.304,-2.196 -2.929,-2.93 -2.929,-7.678 0,-10.607 l 30.941,-30.941 c 2.93,-2.928 7.678,-2.928 10.607,0 2.93,2.929 2.93,7.677 0.001,10.607 z m 76.549,-21.214 c -2.93,2.93 -7.679,2.929 -10.606,0.001 -12.335,-12.332 -32.4,-12.332 -44.729,0 -1.465,1.464 -3.385,2.196 -5.304,2.196 -1.919,0 -3.839,-0.732 -5.304,-2.196 -2.929,-2.93 -2.929,-7.678 0,-10.607 18.18,-18.18 47.763,-18.18 65.942,0 2.93,2.928 2.93,7.677 10e-4,10.606 z"
   id="path3-4" />
	<path
   style="fill:#ffffff"
   d="m 202.029,149.875 c -2.929,2.93 -2.929,7.678 0,10.607 1.465,1.464 3.385,2.196 5.304,2.196 1.919,0 3.839,-0.732 5.304,-2.196 12.329,-12.332 32.395,-12.332 44.729,0 2.928,2.928 7.677,2.929 10.606,-0.001 2.929,-2.929 2.929,-7.678 -10e-4,-10.606 -18.18,-18.18 -47.763,-18.18 -65.942,0 z"
   id="path4-5" />
	<path
   style="fill:#ffffff"
   d="m 180.816,171.088 -30.941,30.941 c -2.929,2.93 -2.929,7.678 0,10.607 1.465,1.464 3.385,2.196 5.304,2.196 1.919,0 3.839,-0.732 5.304,-2.196 l 30.941,-30.941 c 2.929,-2.93 2.929,-7.678 0,-10.607 -2.931,-2.928 -7.679,-2.928 -10.608,0 z"
   id="path5-5" />
	<path
   style="fill:#3d2a20"
   d="m 467.804,142.013 c -7.478,-7.477 -9.228,-12.783 -11.254,-18.926 -2.293,-6.954 -4.893,-14.836 -14.892,-24.836 -10,-9.999 -17.882,-12.599 -24.836,-14.893 -6.144,-2.025 -11.449,-3.775 -18.927,-11.254 -7.479,-7.478 -9.229,-12.783 -11.254,-18.927 -2.294,-6.954 -4.894,-14.836 -14.893,-24.836 -10,-9.999 -17.882,-12.599 -24.836,-14.892 -6.143,-2.026 -11.449,-3.776 -18.926,-11.254 -1.661,-1.66 -4.002,-2.45 -6.332,-2.125 -2.327,0.321 -4.369,1.716 -5.517,3.766 -1.523,2.723 -33.486,60.706 -29.936,122.003 -14.084,-12.68 -32.109,-19.622 -51.203,-19.622 -20.468,0 -39.711,7.971 -54.185,22.443 l -52.154,52.154 C 99.755,209.719 98.817,256.155 125.838,286.202 64.539,282.657 6.56,314.616 3.837,316.139 c -2.05,1.147 -3.444,3.189 -3.766,5.517 -0.322,2.327 0.464,4.671 2.125,6.332 7.478,7.477 9.228,12.783 11.254,18.926 2.293,6.954 4.893,14.836 14.892,24.836 10,9.999 17.882,12.599 24.836,14.893 6.144,2.025 11.449,3.775 18.927,11.254 7.479,7.478 9.229,12.783 11.254,18.927 2.294,6.954 4.894,14.836 14.893,24.836 10,9.999 17.882,12.599 24.836,14.892 6.143,2.026 11.449,3.776 18.926,11.254 1.417,1.416 3.328,2.196 5.304,2.196 0.341,0 0.686,-0.023 1.028,-0.071 2.327,-0.321 4.369,-1.716 5.517,-3.766 1.524,-2.723 33.486,-60.706 29.936,-122.003 14.084,12.68 32.109,19.622 51.203,19.622 20.468,0 39.711,-7.971 54.185,-22.443 l 52.154,-52.154 c 28.906,-28.907 29.842,-75.35 2.814,-105.397 3.222,0.187 6.437,0.288 9.633,0.288 57.611,0 109.797,-28.771 112.377,-30.214 2.05,-1.147 3.444,-3.189 3.766,-5.517 0.32,-2.329 -0.466,-4.673 -2.127,-6.334 z m -137.072,136.565 -52.154,52.154 c -11.64,11.641 -27.115,18.051 -43.577,18.051 -16.462,0 -31.938,-6.41 -43.577,-18.051 L 139.27,278.578 c -24.029,-24.028 -24.029,-63.126 0,-87.154 l 52.154,-52.154 c 11.64,-11.641 27.115,-18.051 43.577,-18.051 16.462,0 31.938,6.41 43.577,18.051 l 52.154,52.154 c 24.029,24.028 24.029,63.125 0,87.154 z M 127.784,442.305 c -6.143,-2.026 -11.449,-3.776 -18.926,-11.254 -7.479,-7.478 -9.229,-12.783 -11.254,-18.927 C 95.31,405.17 92.71,397.288 82.711,387.288 72.711,377.289 64.829,374.689 57.875,372.395 51.731,370.37 46.426,368.62 38.948,361.141 31.47,353.664 29.72,348.358 27.694,342.215 c -1.672,-5.069 -3.507,-10.632 -8.251,-17.148 19.888,-9.413 72.316,-30.825 121.584,-22.002 -6.222,2.751 -12.992,6.201 -20.279,10.36 -3.598,2.053 -4.85,6.634 -2.796,10.231 1.384,2.425 3.915,3.783 6.521,3.783 1.26,0 2.538,-0.317 3.711,-0.987 9.576,-5.465 18.086,-9.589 25.406,-12.338 l 2.301,2.301 c -9.349,24.894 -32.536,57.668 -46.018,75.595 -2.489,3.311 -1.824,8.012 1.486,10.502 1.351,1.016 2.933,1.506 4.502,1.506 2.277,0 4.526,-1.032 6,-2.992 15.388,-20.461 34.544,-48.196 45.078,-72.03 8.814,49.264 -12.598,101.681 -22.007,121.56 -6.516,-4.744 -12.078,-6.579 -17.148,-8.251 z M 328.998,166.941 c 23.832,-10.534 51.563,-29.686 72.021,-45.072 3.311,-2.49 3.976,-7.191 1.486,-10.502 -2.49,-3.311 -7.191,-3.977 -10.502,-1.486 -17.924,13.48 -50.693,36.665 -75.587,46.013 l -2.307,-2.307 c 9.349,-24.894 32.536,-57.668 46.019,-75.595 2.489,-3.311 1.824,-8.012 -1.486,-10.502 -3.31,-2.489 -8.013,-1.824 -10.502,1.486 -15.389,20.462 -34.545,48.197 -45.079,72.031 -8.816,-49.265 12.597,-101.683 22.007,-121.563 6.517,4.744 12.079,6.579 17.148,8.251 6.143,2.026 11.449,3.776 18.926,11.254 7.479,7.478 9.229,12.783 11.254,18.927 2.294,6.954 4.894,14.836 14.893,24.836 10,9.999 17.882,12.599 24.836,14.893 6.144,2.025 11.449,3.775 18.927,11.254 7.478,7.477 9.228,12.783 11.254,18.926 1.672,5.069 3.507,10.632 8.251,17.148 -19.886,9.411 -72.3,30.819 -121.559,22.008 z"
   id="path6" />
	<path
   style="fill:#3d2a20"
   d="m 94.84,329.656 c -8.358,5.643 -17.059,11.859 -25.857,18.478 -3.311,2.49 -3.976,7.192 -1.486,10.502 1.475,1.96 3.723,2.992 6,2.992 1.569,0 3.151,-0.49 4.502,-1.506 8.597,-6.466 17.087,-12.533 25.234,-18.034 3.434,-2.317 4.338,-6.979 2.02,-10.412 -2.319,-3.434 -6.98,-4.339 -10.413,-2.02 z"
   id="path7-1" />
</g></g><g
     id="layer18"><g
       id="g2"
       transform="translate(0.94828465,-7.1717987)"><path
         style="fill:url(#linearGradient31);fill-opacity:1;stroke:#000000;stroke-width:0.949732;stroke-opacity:1"
         d="m 99.551402,67.080663 c -3.528238,4.043213 -9.213182,3.089912 -9.213182,3.089912 l -1.683641,-2.26525 c 0,0 0.147883,2.180785 -0.441188,2.577687 -1.87941,1.266302 -6.253591,0.926341 -9.180143,0.235528 -0.594639,-0.140365 -0.977773,-2.667937 -0.977773,-2.667937 l -1.606631,2.150308 c 0,0 -10.850087,-0.319491 -11.656027,-4.760229 4.984799,-5.445839 11.293874,-6.453584 17.465204,-6.192553 6.322499,0.267425 14.25233,2.85344 17.293381,7.832534 z"
         id="path30" /><path
         style="display:none;fill:#f86400;fill-opacity:1;stroke:#000000;stroke-width:1.00157;stroke-opacity:1"
         d="m 57.180077,74.380587 c 3.091821,-2.199457 6.043422,-9.646232 6.043422,-9.646232 0,0 3.02196,11.330715 6.624521,11.273308 20.782958,-0.331175 35.90456,4.014436 49.16092,-7.20562 4.60885,-3.900887 -12.13669,-15.792346 -16.96807,-12.667943 -4.756801,3.076166 -7.670632,2.82326 -11.854408,1.162196 -6.01568,-2.388376 -12.439095,-4.641514 -18.130269,-1.162197 -2.83019,1.730245 -5.122699,3.89161 -9.646232,-0.348659 -2.419463,-2.267955 -13.774838,9.607397 -17.377633,14.207442 -3.602795,4.600044 1.234085,5.38795 3.43549,6.386581 2.713405,1.230892 6.284373,-0.271729 8.712259,-1.998876 z"
         id="path19" /><g
         id="g15"
         style="display:inline;fill:#3ace00;fill-opacity:1;stroke:#000000;stroke-opacity:1"
         transform="matrix(-0.25932247,0,0,0.27550773,103.53271,41.477763)"><path
           style="fill:#2fa700;fill-opacity:1;stroke:#000000;stroke-width:1.00157;stroke-opacity:1"
           d="m 104.0166,51.020434 c -5.831284,0.939389 -16.845547,5.222703 -24.987225,-9.646232 -5.119967,9.420976 -1.743296,29.636015 -1.743296,29.636015 0,0 5.810984,4.416348 11.273308,0.464879 0,0 2.344699,-15.583067 15.457213,-20.454662 z"
           id="path14" /><path
           style="fill:url(#linearGradient34);fill-opacity:1;stroke:#000000;stroke-width:1.00157;stroke-opacity:1"
           d="m 103.66794,51.369093 c -18.943802,5.229886 -24.754785,-10.57599 -24.754785,-10.57599 0,0 21.733075,-3.37037 24.754785,10.57599 z"
           id="path15" /></g></g></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
